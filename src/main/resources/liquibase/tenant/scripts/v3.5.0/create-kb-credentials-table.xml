<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

  <changeSet id="MODKBEKBJ-444@@create-kb-credentials-table" author="dmtkachenko">
    <createTable tableName="kb_credentials">
      <column name="id" type="uuid">
        <constraints primaryKey="true" primaryKeyName="pk_kb_credentials"
                     nullable="false"/>
      </column>
      <column name="name" type="varchar(255)">
        <constraints unique="true" uniqueConstraintName="unq_kb_credentials_name"
                     nullable="false"/>
      </column>
      <column name="customer_id" type="varchar(100)">
        <constraints nullable="false"/>
      </column>
      <column name="api_key" type="varchar(100)">
        <constraints nullable="false"/>
      </column>
      <column name="url" type="varchar(255)">
        <constraints nullable="false"/>
      </column>
      <column name="created_date" type="timestamptz" defaultValueComputed="current_timestamp">
        <constraints nullable="false"/>
      </column>
      <column name="created_by_user_id" type="uuid">
        <constraints nullable="false"/>
      </column>
      <column name="created_by_user_name" type="varchar(100)">
        <constraints nullable="false"/>
      </column>
      <column name="updated_date" type="timestamptz"/>
      <column name="updated_by_user_id" type="uuid"/>
      <column name="updated_by_user_name" type="varchar(100)"/>
    </createTable>
  </changeSet>

  <changeSet id="MODKBEKBJ-444-datamigration@@insert-dummy-credentials-if-not-present" author="dmtkachenko">
    <!-- Shouldn't happen: the table is not expected to contain any rows -->
    <preConditions onFail="MARK_RAN" onFailMessage="[WARN] Credentials already there, dummy one won't be inserted">
      <sqlCheck expectedResult="0">
        SELECT COUNT(*)
          FROM ${database.defaultSchemaName}.kb_credentials;
      </sqlCheck>
    </preConditions>

    <insert tableName="kb_credentials">
      <column name="id" type="uuid" value="80898dee-449f-44dd-9c8e-37d5eb469b1d"/>
      <column name="name" value="Dummy Credentials"/>
      <column name="customer_id" value="dummyCustomerId"/>
      <column name="api_key" value="dummyKey"/>
      <column name="url" value="http://dummy.url.com"/>
      <column name="created_date" valueComputed="current_timestamp"/>
      <!-- fake ID, to be changed!! -->
      <column name="created_by_user_id" type="uuid" value="4a599ce7-95e7-4305-9188-7f946e084296"/>
      <column name="created_by_user_name" value="SYSTEM"/>
    </insert>
  </changeSet>

  <changeSet id="MODKBEKBJ-444-datamigration@@create-get-single-credentials-id-function" author="dmtkachenko">
    <createProcedure>
      CREATE OR REPLACE FUNCTION ${database.defaultSchemaName}.get_single_credentials_id()
        RETURNS uuid AS $$
      DECLARE
        rowCount int;
      BEGIN
        rowCount = (SELECT count(*) FROM ${database.defaultSchemaName}.kb_credentials);

        IF rowCount = 1 THEN
          RETURN (SELECT id FROM ${database.defaultSchemaName}.kb_credentials);
        ELSE
          RAISE EXCEPTION 'Single credentials record expected but % found', rowCount;
        END IF;
      END;
      $$ LANGUAGE 'plpgsql';
    </createProcedure>
  </changeSet>

</databaseChangeLog>
